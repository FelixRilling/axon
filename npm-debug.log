0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.15.0
3 info using node@v4.4.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Applications/MAMP/htdocs/chevronjs',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/felixrilling/.npm/chevronjs/3.3.1/package.tgz not in flight; packing
9 verbose correctMkdir /Users/felixrilling/.npm correctMkdir not in flight; initializing
10 verbose tar pack [ '/Users/felixrilling/.npm/chevronjs/3.3.1/package.tgz',
10 verbose tar pack   '/Applications/MAMP/htdocs/chevronjs' ]
11 verbose tarball /Users/felixrilling/.npm/chevronjs/3.3.1/package.tgz
12 verbose folder /Applications/MAMP/htdocs/chevronjs
13 info prepublish chevronjs@3.3.1
14 verbose addLocalTarball adding from inside cache /Users/felixrilling/.npm/chevronjs/3.3.1/package.tgz
15 verbose correctMkdir /Users/felixrilling/.npm correctMkdir not in flight; initializing
16 silly cache afterAdd chevronjs@3.3.1
17 verbose afterAdd /Users/felixrilling/.npm/chevronjs/3.3.1/package/package.json not in flight; writing
18 verbose correctMkdir /Users/felixrilling/.npm correctMkdir not in flight; initializing
19 verbose afterAdd /Users/felixrilling/.npm/chevronjs/3.3.1/package/package.json written
20 silly publish { name: 'chevronjs',
20 silly publish   version: '3.3.1',
20 silly publish   description: 'Chevron is a extremely small(1.3kB) JavaScript service library for easy dependency managment and lazy module loading.',
20 silly publish   main: 'dist/chevron.js',
20 silly publish   repository:
20 silly publish    { type: 'git',
20 silly publish      url: 'git+https://github.com/FelixRilling/chevronjs.git' },
20 silly publish   scripts: { build: 'grunt' },
20 silly publish   keywords: [ 'dependencies', 'services' ],
20 silly publish   author: { name: 'Felix Rilling' },
20 silly publish   license: 'MIT',
20 silly publish   bugs: { url: 'https://github.com/FelixRilling/chevronjs/issues' },
20 silly publish   homepage: 'https://github.com/FelixRilling/chevronjs#readme',
20 silly publish   devDependencies:
20 silly publish    { 'babel-core': '^6.0.20',
20 silly publish      'babel-plugin-array-includes': '^2.0.3',
20 silly publish      'babel-preset-es2015': '^6.9.0',
20 silly publish      grunt: '^1.0.1',
20 silly publish      'grunt-babel': '^6.0.0',
20 silly publish      'grunt-contrib-clean': '^1.0.0',
20 silly publish      'grunt-contrib-uglify': '^2.0.0',
20 silly publish      'grunt-contrib-watch': '^1.0.0',
20 silly publish      'grunt-exec': '^1.0.0',
20 silly publish      'grunt-replace': '^1.0.1',
20 silly publish      'jit-grunt': '^0.10.0',
20 silly publish      lodash: '^4.14.0',
20 silly publish      'lodash-es': '^4.14.0',
20 silly publish      rollup: '^0.34.1',
20 silly publish      'rollup-plugin-commonjs': '^3.3.1',
20 silly publish      'rollup-plugin-node-resolve': '^1.7.1',
20 silly publish      'time-grunt': '^1.4.0',
20 silly publish      'uglify-js': '^2.7.0' },
20 silly publish   dependencies: {},
20 silly publish   readme: '![ChevronJS](/chevron-logo.png)\n\n# Chevron.js\n\n> An extremely small JavaScript service/dependency library\n\n## Introduction\n\nChevron is a extremely small(1.3kB) JavaScript service library for easy dependency managment and lazy module loading, inspired by [BottleJS](https://github.com/young-steveo/bottlejs) and the [AngularJS Module API](https://docs.angularjs.org/api/ng/type/angular.Module).\n\n## Syntax\n\n### Constructor\n\nTo do anything with Chevron, you need to create a new Chevron Container:\n\n```javascript\nvar cv = new Chevron();\n```\n\n### Services\n\nServices are the bread and butter of Chevron, being the most common way to declare a new component.\n\n```javascript\n\n//Chevron.prototype.service(name,[dependencies],content);\ncv.service("foo",[],\n  function(){\n      return 12;\n  }\n);\n\nvar foo = cv.access("foo");\nfoo();//returns 12\n```\n\nor with dependencies\n\n```javascript\n\ncv.service("foo",[],\n  function(){\n      return 12;\n  }\n);\n\ncv.service("bar",["foo"],\n  function(foo, int){\n      return int * foo();\n  }\n);\n\nvar bar = cv.access("bar");\nbar(2);//returns 24\n```\n\n### Factories\n\nFactories are like Services but are treated as Constructors instead of classic functions.\n\n```javascript\n//Chevron.prototype.factory(name,[dependencies],Constructor,[arguments]);\ncv.factory("foo",[],\n  function(int){\n      this.foo = int;\n      this.bar = 17;\n  },\n  [7]\n);\n\nvar foo = cv.access("foo");\nfoo.bar;//returns 17\n```\n\nor combined with a service\n\n```javascript\ncv.factory("foo",[],\n  function(int){\n      this.foo = int;\n      this.bar = 17;\n  },\n  [7]\n);\n\ncv.service("bar",["foo"],\n  function(foo, int){\n      return int * foo.foo;\n  }\n);\n\nvar bar = cv.access("bar");\nbar(3);//returns 21\n```\n\n### Accessing services\n\nServices and Factories can be accessed in two ways:\n\n```javascript\ncv.access("foo"); //returns the service with dependencies injected into arguments\n```\n\nor, if you just want the service without dependencies from the chevron container(called chev):\n\n```javascript\ncv.chev.foo; //returns the service as Chevron object.\n```\n\n## Options\n\nThe Chevron Constructor can be called with options:\n\n```javascript\n//Chevron.prototype.service(name = "Chevron");\nvar namedCv = new Chevron("myCustomContainer");\n```\n\n# FAQ\n\n- **Q: Why are there no middleware/decorators?**\n- A: I actually had middleware/decorators in version 1.x, but I removed them because I felt like the lib should focus more on being tiny than on more features\n',
20 silly publish   readmeFilename: 'README.md',
20 silly publish   gitHead: '2d812179779a9a57288d92f960672ee935c73111',
20 silly publish   _id: 'chevronjs@3.3.1',
20 silly publish   _shasum: '63409cfbce2f3475bdabfe3b54043bc9de38cfb9',
20 silly publish   _from: '.' }
21 verbose getPublishConfig undefined
22 silly mapToRegistry name chevronjs
23 silly mapToRegistry using default registry
24 silly mapToRegistry registry https://registry.npmjs.org/
25 silly mapToRegistry data Result {
25 silly mapToRegistry   raw: 'chevronjs',
25 silly mapToRegistry   scope: null,
25 silly mapToRegistry   name: 'chevronjs',
25 silly mapToRegistry   rawSpec: '',
25 silly mapToRegistry   spec: 'latest',
25 silly mapToRegistry   type: 'tag' }
26 silly mapToRegistry uri https://registry.npmjs.org/chevronjs
27 verbose publish registryBase https://registry.npmjs.org/
28 silly publish uploading /Users/felixrilling/.npm/chevronjs/3.3.1/package.tgz
29 verbose stack Error: auth required for publishing
29 verbose stack     at CachingRegistryClient.publish (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/publish.js:30:14)
29 verbose stack     at /usr/local/lib/node_modules/npm/lib/publish.js:134:14
29 verbose stack     at mapToRegistry (/usr/local/lib/node_modules/npm/lib/utils/map-to-registry.js:62:3)
29 verbose stack     at publish_ (/usr/local/lib/node_modules/npm/lib/publish.js:104:3)
29 verbose stack     at Array.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/slide/lib/bind-actor.js:15:8)
29 verbose stack     at LOOP (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:15:14)
29 verbose stack     at LOOP (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:14:28)
29 verbose stack     at chain (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:20:5)
29 verbose stack     at /usr/local/lib/node_modules/npm/lib/publish.js:73:5
29 verbose stack     at RES (/usr/local/lib/node_modules/npm/node_modules/inflight/inflight.js:23:14)
30 verbose cwd /Applications/MAMP/htdocs/chevronjs
31 error Darwin 15.3.0
32 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
33 error node v4.4.2
34 error npm  v2.15.0
35 error code ENEEDAUTH
36 error need auth auth required for publishing
36 error need auth You need to authorize this machine using `npm adduser`
37 verbose exit [ 1, true ]
