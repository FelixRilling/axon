var Axon=function(){"use strict";const n=20,t="input",r="x-",e="hidden",o="value",i="textContent",c="innerHTML",u=["'",'"',"`"],s=function(n){const t=Array.from(n.attributes),e=[];return t.forEach(n=>{if(n.name.substr(0,r.length)===r){const t=n.name.replace(r,"").split(":");e.push({key:t[0],opt:t[1]||!1,val:n.value})}}),e},f=function(n){return"undefined"!=typeof n},a=function(n){const t=function(n){const r=s(n),e=n.children;if(r.length||e.length){let o={node:n,directives:r,children:[]};const i=Array.from(e);return i.forEach(n=>{const r=t(n);f(r)&&o.children.push(r)}),o}};return t(n)},l=function(){return!1},d=function(n,t){const r=t.substr(0,t.length-1).split("("),e=r[0],o=r[1].split(",").filter(n=>""!==n).map(t=>{return p(n,t)}),i=n.$methods[e];if("function"==typeof i)return{fn:i,args:o};throw new Error(`Missing method '${t}'`)},h=function(n,t){const r=t.split("."),e={val:null,ref:null};let o,i=n.$data;return r.forEach((n,c)=>{if(o=i[n],!f(o))throw new Error(`Missing prop '${t}'`);c<r.length-1?i=o:(e.val=o,e.ref=i)}),e},p=function(n,t){if(isNaN(Number(t))){if(u.includes(t.substr(0,1)))return t.substr(1,t.length-2);if(")"===t.substr(t.length-1)){const r=d(n,t);return r.fn.apply(n,r.args)}return h(n,t).val}return Number(t)},v=function(n,t,r){const o=p(n,r.val),i=Boolean(o);return i?t.removeAttribute(e):t.setAttribute(e,e),i},m=function(n,t,r){let e;return function(){const o=this,i=Array.from(arguments),c=r&&!e,u=function(){e=null,r||n.apply(o,i)};clearTimeout(e),e=setTimeout(u,t),c&&n.apply(o,i)}},g=function(n){return f(n[o])?o:f(n[i])?i:c},b=function(t,r,e,o,i){const c=m(e,n),u=g(t),s=function(n){const t=n.target,r=Array.from(o);return r.push(t[u],t,n),c.apply(i,r)};return t.addEventListener(r,s,!1)},y=function(n,t,r){const e=d(n,r.val);return b(t,r.opt,e.fn,e.args,n),!0},$=function(r,e,o){const i=h(r,o.val),c=function(t,e){i.ref[o.val]=e,setTimeout(()=>{r.$render()},n)};return b(e,t,c,[i.val],r),!0},E=function(n,t,r){const e=g(t),o=h(n,r.val);return t[e]=o.val,!0},A=function(n,t,r){const e=p(n,r.val);return t.setAttribute(r.opt,e),!0},N=function(n,t,r){const e=r.val.split(" "),o={val:e[0],in:p(n,e[2])};return r.data=o,console.log("FOR INIT",o),!0},x=function(n,t,r){const e="x-clone",o=r.data.in,i=t.parentNode,c=Array.from(i.children);return c.forEach(n=>{n.hasAttribute(e)&&n.remove()}),o.forEach((n,r)=>{if(r>0){const n=t.cloneNode(!0);n.setAttribute(e,!0),i.appendChild(n)}}),console.log("FOR RENDER",t),!0},T={ignore:{init:l,render:l},if:{render:v},on:{init:y},model:{init:$,render:E},bind:{render:A},for:{init:N,render:x}},w=function(n,t,r){const e=function(t){const o=t.children,i=t.directives;let c=!0;i.length&&t.directives.forEach(e=>{const o=T[e.key];if(o){const i=o[r];if(i){const r=i(n,t.node,e);r||(c=!1)}}}),c&&o.length&&o.forEach(n=>{e(n)})};e(t)},R=class{constructor(n){const t=this;return t.$context=document.querySelector(n.context),t.$data=n.data,t.$methods=n.methods,t.$cache={},t.$init(),t.$render(),t}$init(){const n=this;n.$cache=a(n.$context),w(n,n.$cache,"init")}$render(){const n=this;w(n,n.$cache,"render")}};return R}();