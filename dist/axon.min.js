var Axon=function(){"use strict";const n=n=>Array.from(n),t=n=>Array.isArray(n),e=function(n){const i=[];return n.forEach(n=>{t(n)?i.push(...e(n)):i.push(n)}),i},i=function(t,e=document,i=!1){return i?n(e.querySelectorAll(t)):e.querySelector(t)},r=n=>n.name.startsWith("x-"),c=t=>n(t.attributes).some(r),o=function(t){return n(t.attributes).filter(r).map(n=>{const t=n.name.replace("x-","").split(":");const e=n.value;return{val:e,name:t[0],secondary:t[1]||!1}})},u=()=>!1,s={ignore:{init:u,render:u},if:{render:function(n,t,e){return!0}},on:{init:function(n,t,e){return!0}},model:{init:function(n,t){return console.log("MODEL",[n,t]),!0},render:function(n,t){return console.log("MODEL",[n,t]),!0}},bind:{render:function(n,t,e){return!0}}},f=class{constructor(t,i){const r=function(n){return c(n)?new f(n,i):n.children.length>0?u(n.children):null},u=t=>e(n(t).map(r).filter(n=>null!==n));this.data={},this.directives=o(t),this._root=i,this._element=t,this._children=u(t.children)}execDirectives(n){return this.directives.map(t=>{const e=s[t.name];return e?e[n]?e[n](t,this):(console.log(`directive has no type '${n}'`),!0):(console.log(`directive '${t.name}' not found`),!0)}).every(n=>!1!==n)}execDirectivesRecursive(n){const t=this.execDirectives(n);return t&&this._children.forEach(t=>{t.execDirectives(n)}),t}init(){return this.execDirectivesRecursive("init")}render(){return this.execDirectivesRecursive("render")}};return class extends f{constructor(n){super(i(n.el),!0),this.data=n.data||{},this.methods=n.methods||{},this.init(),this.render()}}}();