{"version":3,"sources":["axon.js"],"names":["Axon","DOM_EVENT_TIMEOUT","DOM_EVENT_MODEL","DOM_ATTR_PREFIX","DOM_ATTR_HIDDEN","DOM_NODE_VALUE","DOM_NODE_TEXT","DOM_NODE_HTML","LIB_STRING_QUOTES","eachDirective","node","namesList","names","map","item","name","attrArr","Array","from","attributes","result","forEach","attr","substr","length","splitName","replace","split","nameIndex","indexOf","fn","value","crawlNodes","entry","recurseNodes","childElementCount","childArr","children","childNode","debounce","wait","immediate","timeout","context","this","args","arguments","callNow","later","apply","clearTimeout","setTimeout","isDefined","val","getNodeValueType","bindEvent","eventType","eventFn","eventArgs","instance","debouncedFn","nodeValueType","eventFnWrapper","event","target","push","addEventListener","retrieveProp","expression","splitExpression","reference","container","$data","prop","propPath","index","Error","evaluateExpression","isNaN","Number","includes","method","retrieveMethod","expressionSplit","methodName","methodArgs","filter","arg","methodFn","$methods","initOn","targetMethod","initModel","propName","targetProp","currentValue","newValue","$render","init","_this","$context","nameSecondary","console","log","renderIf","propValue","Boolean","removeAttribute","setAttribute","renderModel","renderBind","bindType","render","config","document","querySelector","data","methods","$init","prototype","constructor"],"mappings":"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","file":"axon.min.js","sourcesContent":["/**\n * Axon v0.12.0\n * Author: Felix Rilling\n * Repository: git+https://github.com/FelixRilling/axonjs.git\n */\n\nvar Axon = (function () {\n'use strict';\n\nvar DOM_EVENT_TIMEOUT = 20; //event timeout in ms\nvar DOM_EVENT_MODEL = \"input\";\n\nvar DOM_ATTR_PREFIX = \"x-\";\nvar DOM_ATTR_HIDDEN = \"hidden\";\n\nvar DOM_NODE_VALUE = \"value\";\nvar DOM_NODE_TEXT = \"textContent\";\nvar DOM_NODE_HTML = \"innerHTML\";\n\nvar LIB_STRING_QUOTES = [\"'\", \"\\\"\", \"`\"];\n\nvar eachDirective = function eachDirective(node, namesList) {\n    var names = namesList.map(function (item) {\n        return item.name;\n    });\n    var attrArr = Array.from(node.attributes);\n    var result = true;\n\n    attrArr.forEach(function (attr) {\n        //If is Axon attribute\n        if (attr.name.substr(0, DOM_ATTR_PREFIX.length) === DOM_ATTR_PREFIX) {\n            var splitName = attr.name.replace(DOM_ATTR_PREFIX, \"\").split(\":\");\n            var nameIndex = names.indexOf(splitName[0]);\n\n            //If name is allowed\n            if (nameIndex !== -1) {\n                result = namesList[nameIndex].fn(splitName[0], splitName[1], attr.value);\n            }\n        }\n    });\n\n    return result;\n};\n\nvar crawlNodes = function crawlNodes(entry, fn) {\n    var recurseNodes = function recurseNodes(node, fn) {\n        var result = fn(node);\n\n        if (result && node.childElementCount) {\n            var childArr = Array.from(node.children);\n\n            childArr.forEach(function (childNode) {\n                result = recurseNodes(childNode, fn);\n            });\n        }\n\n        return result;\n    };\n\n    return recurseNodes(entry, fn);\n};\n\nvar debounce = function debounce(fn, wait, immediate) {\n    var timeout = void 0;\n\n    return function () {\n        var context = this;\n        var args = Array.from(arguments);\n        var callNow = immediate && !timeout;\n        var later = function later() {\n            timeout = null;\n            if (!immediate) {\n                fn.apply(context, args);\n            }\n        };\n\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            fn.apply(context, args);\n        }\n    };\n};\n\nvar isDefined = function isDefined(val) {\n    return typeof val !== \"undefined\";\n};\n\nvar getNodeValueType = function getNodeValueType(node) {\n    if (isDefined(node[DOM_NODE_VALUE])) {\n        return DOM_NODE_VALUE;\n    } else if (isDefined(node[DOM_NODE_TEXT])) {\n        return DOM_NODE_TEXT;\n    } else {\n        return DOM_NODE_HTML;\n    }\n};\n\nvar bindEvent = function bindEvent(node, eventType, eventFn, eventArgs, instance) {\n    var debouncedFn = debounce(eventFn, DOM_EVENT_TIMEOUT);\n    var nodeValueType = getNodeValueType(node);\n\n    var eventFnWrapper = function eventFnWrapper(event) {\n        var target = event.target;\n        var args = Array.from(eventArgs);\n\n        args.push(target[nodeValueType], target, event);\n\n        return debouncedFn.apply(instance, args);\n    };\n\n    return node.addEventListener(eventType, eventFnWrapper, false);\n};\n\nvar retrieveProp = function retrieveProp(instance, expression) {\n    var splitExpression = expression.split(\".\");\n    var result = {\n        val: null,\n        reference: null\n    };\n    var container = instance.$data;\n    var prop = void 0;\n\n    splitExpression.forEach(function (propPath, index) {\n        prop = container[propPath];\n\n        if (isDefined(\"undefined\")) {\n\n            if (index < splitExpression.length - 1) {\n                container = prop;\n            } else {\n                result.val = prop;\n                result.reference = container;\n            }\n        } else {\n            throw new Error(\"Property not found: '\" + expression + \"'\");\n        }\n    });\n\n    return result;\n};\n\nvar evaluateExpression = function evaluateExpression(instance, expression) {\n    if (!isNaN(Number(expression))) {\n        //expression is a Number\n        return Number(expression);\n    } else if (LIB_STRING_QUOTES.includes(expression.substr(0, 1))) {\n        //expression is a String\n        return expression.substr(1, expression.length - 2);\n    } else if (expression.substr(expression.length - 1) === \")\") {\n        //expression is a Method\n        var method = retrieveMethod(instance, expression);\n\n        return method.fn.apply(instance, method.args);\n    } else {\n        //expression is a Property\n        return retrieveProp(instance, expression).val;\n    }\n};\n\nvar retrieveMethod = function retrieveMethod(instance, expression) {\n    var expressionSplit = expression.substr(0, expression.length - 1).split(\"(\");\n    var methodName = expressionSplit[0];\n    var methodArgs = expressionSplit[1].split(\",\").filter(function (item) {\n        return item !== \"\";\n    }).map(function (arg) {\n        return evaluateExpression(instance, arg);\n    });\n    var methodFn = instance.$methods[methodName];\n\n    if (typeof methodFn === \"function\") {\n        return {\n            fn: methodFn,\n            args: methodArgs\n        };\n    } else {\n        throw new Error(\"Method not found: '\" + expression + \"'\");\n    }\n};\n\nvar initOn = function initOn(instance, node, eventType, methodName) {\n    var targetMethod = retrieveMethod(instance, methodName);\n\n    bindEvent(node, eventType, targetMethod.fn, targetMethod.args, instance);\n\n    return true;\n};\n\nvar initModel = function initModel(instance, node, propName) {\n    var targetProp = retrieveProp(instance, propName);\n    var eventFn = function eventFn(currentValue, newValue) {\n        targetProp.reference[propName] = newValue;\n\n        setTimeout(function () {\n            instance.$render();\n        }, DOM_EVENT_TIMEOUT);\n    };\n\n    bindEvent(node, DOM_EVENT_MODEL, eventFn, [targetProp.val], instance);\n\n    return true;\n};\n\nvar init = function init() {\n    var _this = this;\n\n    //Bind events\n    crawlNodes(_this.$context, function (node) {\n        return eachDirective(node, [{\n            name: \"on\",\n            fn: function fn(name, nameSecondary, value) {\n                return initOn(_this, node, nameSecondary, value);\n            }\n        }, {\n            name: \"model\",\n            fn: function fn(name, nameSecondary, value) {\n                return initModel(_this, node, value);\n            }\n        }]);\n    });\n\n    console.log(\"CALLED $init\");\n};\n\nvar renderIf = function renderIf(instance, node, expression) {\n    var propValue = evaluateExpression(instance, expression);\n    var result = Boolean(propValue);\n\n    if (result) {\n        node.removeAttribute(DOM_ATTR_HIDDEN);\n    } else {\n        node.setAttribute(DOM_ATTR_HIDDEN, DOM_ATTR_HIDDEN);\n    }\n\n    return result;\n};\n\nvar renderModel = function renderModel(instance, node, propName) {\n    var nodeValueType = getNodeValueType(node);\n    var propValue = retrieveProp(instance, propName);\n\n    node[nodeValueType] = propValue.val;\n\n    return true;\n};\n\nvar renderBind = function renderBind(instance, node, bindType, expression) {\n    var propValue = evaluateExpression(instance, expression);\n\n    node.setAttribute(bindType, propValue);\n\n    return true;\n};\n\nvar render = function render() {\n    var _this = this;\n\n    //Render DOM\n    crawlNodes(_this.$context, function (node) {\n        return eachDirective(node, [{\n            name: \"ignore\",\n            fn: function fn() {\n                return false;\n            }\n        }, {\n            name: \"if\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderIf(_this, node, value);\n            }\n        }, {\n            name: \"model\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderModel(_this, node, value);\n            }\n        }, {\n            name: \"bind\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderBind(_this, node, nameSecondary, value);\n            }\n        }]);\n    });\n\n    console.log(\"CALLED $render\");\n};\n\n/**\n * Basic Axon Constructor\n *\n * @constructor\n * @param {String} id To identify the instance\n * @returns {Object} Returns Axon instance\n */\nvar Axon = function Axon(config) {\n    var _this = this;\n\n    _this.$context = document.querySelector(config.context);\n    _this.$data = config.data;\n    _this.$methods = config.methods;\n\n    _this.$init();\n    _this.$render();\n};\n\n/**\n * Expose Axon methods\n */\nAxon.prototype = {\n    $init: init,\n    $render: render,\n    constructor: Axon\n};\n\nreturn Axon;\n\n}());\n\n//# sourceMappingURL=axon.js.map\n"]}