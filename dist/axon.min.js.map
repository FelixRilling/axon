{"version":3,"sources":["axon.js"],"names":["Axon","_document","document","TYPE_NAME_UNDEFINED","TYPE_NAME_FUNCTION","LIB_STRING_QUOTES","DOM_EVENT_TIMEOUT","DOM_ATTR_PREFIX","DOM_ATTR_HIDDEN","DOM_EVENT_MODEL","crawlNodes","entry","fn","recurseNodes","node","result","childElementCount","childArr","Array","from","children","forEach","childNode","eachDirective","namesList","names","map","item","name","attrArr","attributes","attr","substr","length","splitName","replace","split","nameIndex","indexOf","value","debounce","wait","immediate","timeout","context","this","args","arguments","callNow","later","apply","clearTimeout","setTimeout","_typeof","Symbol","iterator","obj","constructor","prototype","getNodeValueType","textContent","bindEvent","eventType","eventFn","eventArgs","instance","debouncedFn","nodeValueType","eventFnWrapper","event","target","push","addEventListener","retrieveProp","expression","splitExpression","val","reference","container","$data","prop","propPath","index","Error","evaluateExpression","isNaN","Number","includes","method","retrieveMethod","expressionSplit","methodName","methodArgs","filter","arg","methodFn","$methods","initOn","targetMethod","initModel","propName","targetProp","currentValue","newValue","$render","init","_this","$context","nameSecondary","console","log","renderIf","propValue","Boolean","removeAttribute","setAttribute","renderModel","renderBind","bindType","render","config","querySelector","data","methods","$init"],"mappings":"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","file":"axon.min.js","sourcesContent":["/**\n * Axon v0.12.0\n * Author: Felix Rilling\n * Repository: git+https://github.com/FelixRilling/axonjs.git\n */\n\nvar Axon = (function () {\n'use strict';\n\nvar _document = document;\n\nvar TYPE_NAME_UNDEFINED = \"undefined\";\nvar TYPE_NAME_FUNCTION = \"function\";\nvar LIB_STRING_QUOTES = [\"'\", \"\\\"\", \"`\"];\n\nvar DOM_EVENT_TIMEOUT = 20; //event timeout in ms\nvar DOM_ATTR_PREFIX = \"x-\";\nvar DOM_ATTR_HIDDEN = \"hidden\";\nvar DOM_EVENT_MODEL = \"input\";\n\nvar crawlNodes = function crawlNodes(entry, fn) {\n    var recurseNodes = function recurseNodes(node, fn) {\n        var result = fn(node);\n\n        if (result && node.childElementCount) {\n            var childArr = Array.from(node.children);\n\n            childArr.forEach(function (childNode) {\n                result = recurseNodes(childNode, fn);\n            });\n        }\n\n        return result;\n    };\n\n    return recurseNodes(entry, fn);\n};\n\nvar eachDirective = function eachDirective(node, namesList) {\n    var names = namesList.map(function (item) {\n        return item.name;\n    });\n    var attrArr = Array.from(node.attributes);\n    var result = true;\n\n    attrArr.forEach(function (attr) {\n        //If is Axon attribute\n        if (attr.name.substr(0, DOM_ATTR_PREFIX.length) === DOM_ATTR_PREFIX) {\n            var splitName = attr.name.replace(DOM_ATTR_PREFIX, \"\").split(\":\");\n            var nameIndex = names.indexOf(splitName[0]);\n\n            //If name is allowed\n            if (nameIndex !== -1) {\n                result = namesList[nameIndex].fn(splitName[0], splitName[1], attr.value);\n            }\n        }\n    });\n\n    return result;\n};\n\nvar debounce = function debounce(fn, wait, immediate) {\n    var timeout = void 0;\n\n    return function () {\n        var context = this;\n        var args = Array.from(arguments);\n        var callNow = immediate && !timeout;\n        var later = function later() {\n            timeout = null;\n            if (!immediate) {\n                fn.apply(context, args);\n            }\n        };\n\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            fn.apply(context, args);\n        }\n    };\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar getNodeValueType = function getNodeValueType(node) {\n    if (_typeof(node.value) !== TYPE_NAME_UNDEFINED) {\n        return \"value\";\n    } else if (_typeof(node.textContent) !== TYPE_NAME_UNDEFINED) {\n        return \"textContent\";\n    } else {\n        return \"innerHTML\";\n    }\n};\n\nvar bindEvent = function bindEvent(node, eventType, eventFn, eventArgs, instance) {\n    var debouncedFn = debounce(eventFn, DOM_EVENT_TIMEOUT);\n    var nodeValueType = getNodeValueType(node);\n\n    var eventFnWrapper = function eventFnWrapper(event) {\n        var target = event.target;\n        var args = Array.from(eventArgs);\n\n        args.push(target[nodeValueType], target, event);\n\n        return debouncedFn.apply(instance, args);\n    };\n\n    return node.addEventListener(eventType, eventFnWrapper, false);\n};\n\nvar retrieveProp = function retrieveProp(instance, expression) {\n    var splitExpression = expression.split(\".\");\n    var result = {\n        val: null,\n        reference: null\n    };\n    var container = instance.$data;\n    var prop = void 0;\n\n    splitExpression.forEach(function (propPath, index) {\n        prop = container[propPath];\n\n        if ((typeof prop === \"undefined\" ? \"undefined\" : _typeof(prop)) !== TYPE_NAME_UNDEFINED) {\n\n            if (index < splitExpression.length - 1) {\n                container = prop;\n            } else {\n                result.val = prop;\n                result.reference = container;\n            }\n        } else {\n            throw new Error(\"prop '\" + expression + \"' not found\");\n        }\n    });\n\n    return result;\n};\n\nvar evaluateExpression = function evaluateExpression(instance, expression) {\n    if (!isNaN(Number(expression))) {\n        //expression is a Number\n        return Number(expression);\n    } else if (LIB_STRING_QUOTES.includes(expression.substr(0, 1))) {\n        //expression is a String\n        return expression.substr(1, expression.length - 2);\n    } else if (expression.substr(expression.length - 1) === \")\") {\n        //expression is a Method\n        var method = retrieveMethod(instance, expression);\n\n        return method.fn.apply(instance, method.args);\n    } else {\n        //expression is a Property\n        return retrieveProp(instance, expression).val;\n    }\n};\n\nvar retrieveMethod = function retrieveMethod(instance, expression) {\n    var expressionSplit = expression.substr(0, expression.length - 1).split(\"(\");\n    var methodName = expressionSplit[0];\n    var methodArgs = expressionSplit[1].split(\",\").filter(function (item) {\n        return item !== \"\";\n    }).map(function (arg) {\n        return evaluateExpression(instance, arg);\n    });\n    var methodFn = instance.$methods[methodName];\n\n    if ((typeof methodFn === \"undefined\" ? \"undefined\" : _typeof(methodFn)) === TYPE_NAME_FUNCTION) {\n        return {\n            fn: methodFn,\n            args: methodArgs\n        };\n    } else {\n        throw new Error(\"method '\" + methodName + \"' is not a function\");\n    }\n};\n\nvar initOn = function initOn(instance, node, eventType, methodName) {\n    var targetMethod = retrieveMethod(instance, methodName);\n\n    bindEvent(node, eventType, targetMethod.fn, targetMethod.args, instance);\n\n    return true;\n};\n\nvar initModel = function initModel(instance, node, propName) {\n    var targetProp = retrieveProp(instance, propName);\n    var eventFn = function eventFn(currentValue, newValue) {\n        targetProp.reference[propName] = newValue;\n\n        setTimeout(function () {\n            instance.$render();\n        }, DOM_EVENT_TIMEOUT);\n    };\n\n    bindEvent(node, DOM_EVENT_MODEL, eventFn, [targetProp.val], instance);\n\n    return true;\n};\n\nvar init = function init() {\n    var _this = this;\n\n    //Bind events\n    crawlNodes(_this.$context, function (node) {\n        return eachDirective(node, [{\n            name: \"on\",\n            fn: function fn(name, nameSecondary, value) {\n                return initOn(_this, node, nameSecondary, value);\n            }\n        }, {\n            name: \"model\",\n            fn: function fn(name, nameSecondary, value) {\n                return initModel(_this, node, value);\n            }\n        }]);\n    });\n\n    console.log(\"CALLED $init\");\n};\n\nvar renderIf = function renderIf(instance, node, expression) {\n    var propValue = evaluateExpression(instance, expression);\n    var result = Boolean(propValue);\n\n    if (result) {\n        node.removeAttribute(DOM_ATTR_HIDDEN);\n    } else {\n        node.setAttribute(DOM_ATTR_HIDDEN, DOM_ATTR_HIDDEN);\n    }\n\n    return result;\n};\n\nvar renderModel = function renderModel(instance, node, propName) {\n    var nodeValueType = getNodeValueType(node);\n    var propValue = retrieveProp(instance, propName);\n\n    node[nodeValueType] = propValue.val;\n\n    return true;\n};\n\nvar renderBind = function renderBind(instance, node, bindType, expression) {\n    var propValue = evaluateExpression(instance, expression);\n\n    node.setAttribute(bindType, propValue);\n\n    return true;\n};\n\nvar render = function render() {\n    var _this = this;\n\n    //Render DOM\n    crawlNodes(_this.$context, function (node) {\n        return eachDirective(node, [{\n            name: \"ignore\",\n            fn: function fn() {\n                return false;\n            }\n        }, {\n            name: \"if\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderIf(_this, node, value);\n            }\n        }, {\n            name: \"model\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderModel(_this, node, value);\n            }\n        }, {\n            name: \"bind\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderBind(_this, node, nameSecondary, value);\n            }\n        }]);\n    });\n\n    console.log(\"CALLED $render\");\n};\n\n/**\n * Basic Axon Constructor\n *\n * @constructor\n * @param {String} id To identify the instance\n * @returns {Object} Returns Axon instance\n */\nvar Axon = function Axon(config) {\n    var _this = this;\n\n    _this.$context = _document.querySelector(config.context);\n    _this.$data = config.data;\n    _this.$methods = config.methods;\n\n    _this.$init();\n    _this.$render();\n};\n\n/**\n * Expose Axon methods\n */\nAxon.prototype = {\n    $init: init,\n    $render: render,\n    constructor: Axon\n};\n\nreturn Axon;\n\n}());\n\n//# sourceMappingURL=axon.js.map\n"]}