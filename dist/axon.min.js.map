{"version":3,"sources":["axon.js"],"names":["Axon","_document","document","DEBOUNCE_TIMEOUT","DOM_PREFIX","eachNode","nodeList","fn","l","length","i","eachAttribute","namedNodeMap","item","name","value","crawlNodes","entry","recurseNodes","node","children","result","childNode","eachDirective","namesList","names","map","attributes","attributeName","attributeValue","substr","splitName","replace","split","nameIndex","indexOf","secondary","debounce","wait","immediate","timeout","context","this","args","Array","from","arguments","callNow","later","apply","clearTimeout","setTimeout","getNodeValueType","textContent","bindEvent","eventType","eventFn","eventArgs","instance","debouncedFn","nodeValueType","eventFnWrapper","event","target","push","addEventListener","_typeof","Symbol","iterator","obj","constructor","prototype","retrieveProp","propName","castNumber","Number","stringChars","isNaN","includes","_ret","propPath","prop","$data","forEach","propItem","Error","v","retrieveMethod","methodString","methodStringSplit","methodName","methodArgs","filter","arg","methodFn","$methods","initOn","targetMethod","init","_this","$context","directive","console","log","renderModel","propValue","renderBind","bindType","setAttribute","render","config","autoInit","undefined","querySelector","data","methods","$render","$init"],"mappings":"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","file":"axon.min.js","sourcesContent":["/**\n * Axon v0.8.0\n * Author: Felix Rilling\n * Repository: git+https://github.com/FelixRilling/axonjs.git\n */\n\nvar Axon = (function () {\n'use strict';\n\nvar _document = document;\n\nvar DEBOUNCE_TIMEOUT = 40; //event timeout in ms\n\nvar DOM_PREFIX = \"x-\";\n\n/**\n * iterate over NodeList\n *\n * @private\n * @param {NodeList} nodeList The nodeList to iterate over\n * @param {Function} fn The Function to call\n * @returns void\n */\nvar eachNode = function eachNode(nodeList, fn) {\n    var l = nodeList.length;\n    var i = 0;\n\n    while (i < l) {\n        fn(nodeList[i], i);\n        i++;\n    }\n};\n\n/**\n * Iterate over NamedNodeMap\n *\n * @private\n * @param {NamedNodeMap} namedNodeMap The NamedNodeMap to iterate over\n * @param {Function} fn The Function to run\n * @returns void\n */\nvar eachAttribute = function eachAttribute(namedNodeMap, fn) {\n    var l = namedNodeMap.length;\n    var i = 0;\n\n    while (i < l) {\n        var item = namedNodeMap.item(i);\n\n        fn(item.name, item.value, i);\n        i++;\n    }\n};\n\nvar crawlNodes = function crawlNodes(entry, fn) {\n    var recurseNodes = function recurseNodes(node, fn) {\n        var children = node.children;\n\n        if (children && children.length > 0) {\n            var result = true;\n\n            result = eachNode(children, function (childNode) {\n                return recurseNodes(childNode, fn);\n            });\n\n            return result;\n        } else {\n            return fn(node);\n        }\n    };\n\n    return recurseNodes(entry, fn);\n};\n\nvar eachDirective = function eachDirective(node, namesList) {\n    var names = namesList.map(function (item) {\n        return item.name;\n    });\n\n    eachAttribute(node.attributes, function (attributeName, attributeValue) {\n\n        //If is Axon attribute\n        if (attributeName.substr(0, DOM_PREFIX.length) === DOM_PREFIX) {\n            var splitName = attributeName.replace(DOM_PREFIX, \"\").split(\":\");\n            var nameIndex = names.indexOf(splitName[0]);\n\n            //If name is allowed\n            if (nameIndex !== -1) {\n                namesList[nameIndex].fn({\n                    name: splitName[0],\n                    secondary: splitName[1],\n                    value: attributeValue\n                });\n            }\n        }\n    });\n};\n\nvar debounce = function debounce(fn, wait, immediate) {\n    var timeout = void 0;\n\n    return function () {\n        var context = this;\n        var args = Array.from(arguments);\n        var callNow = immediate && !timeout;\n        var later = function later() {\n            timeout = null;\n            if (!immediate) {\n                fn.apply(context, args);\n            }\n        };\n\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            fn.apply(context, args);\n        }\n    };\n};\n\nvar getNodeValueType = function getNodeValueType(node) {\n    if (typeof node.value !== \"undefined\") {\n        return \"value\";\n    } else if (typeof node.textContent !== \"undefined\") {\n        return \"textContent\";\n    } else {\n        return \"innerHTML\";\n    }\n};\n\nvar bindEvent = function bindEvent(node, eventType, eventFn, eventArgs, instance) {\n    var debouncedFn = debounce(eventFn, DEBOUNCE_TIMEOUT);\n    var nodeValueType = getNodeValueType(node);\n\n    var eventFnWrapper = function eventFnWrapper(event) {\n        var target = event.target;\n        var args = Array.from(eventArgs);\n\n        args.push(target[nodeValueType], target, event);\n\n        return debouncedFn.apply(instance, args);\n    };\n\n    return node.addEventListener(eventType, eventFnWrapper, false);\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar retrieveProp = function retrieveProp(instance, propName) {\n    var castNumber = Number(propName);\n    var stringChars = [\"'\", \"\\\"\", \"`\"];\n\n    if (!isNaN(castNumber)) {\n        //If number\n        return castNumber;\n    } else if (stringChars.includes(propName[0])) {\n        //If String\n        return propName.substr(1, propName.length - 2);\n    } else {\n        var _ret = function () {\n            //If Prop\n            var propPath = propName.split(\".\");\n            var prop = instance.$data;\n\n            propPath.forEach(function (propItem) {\n                prop = prop[propItem];\n            });\n\n            if (typeof prop === \"undefined\") {\n                throw new Error(\"prop '\" + propName + \"' not found\");\n            } else {\n                return {\n                    v: prop\n                };\n            }\n        }();\n\n        if ((typeof _ret === \"undefined\" ? \"undefined\" : _typeof(_ret)) === \"object\") return _ret.v;\n    }\n};\n\nvar retrieveMethod = function retrieveMethod(instance, methodString) {\n    var methodStringSplit = methodString.substr(0, methodString.length - 1).split(\"(\");\n    var methodName = methodStringSplit[0];\n    var methodArgs = methodStringSplit[1].split(\",\").filter(function (item) {\n        return item !== \"\";\n    }).map(function (arg) {\n        return retrieveProp(instance, arg);\n    });\n\n    var methodFn = instance.$methods[methodName];\n\n    if (typeof methodFn !== \"function\") {\n        throw new Error(\"method '\" + methodName + \"' not found\");\n    } else {\n        return {\n            fn: methodFn,\n            args: methodArgs\n        };\n    }\n};\n\nvar initOn = function initOn(instance, node, eventType, methodName) {\n    var targetMethod = retrieveMethod(instance, methodName);\n\n    bindEvent(node, eventType, targetMethod.fn, targetMethod.args, instance);\n};\n\nvar init = function init() {\n    var _this = this;\n\n    //Bind events\n    crawlNodes(_this.$context, function (node) {\n        eachDirective(node, [{\n            name: \"on\",\n            fn: function fn(directive) {\n                initOn(_this, node, directive.secondary, directive.value);\n            }\n        }]);\n\n        return true;\n    });\n\n    console.log(\"CALLED $init\");\n};\n\nvar renderModel = function renderModel(instance, node, propName) {\n    var nodeValueType = getNodeValueType(node);\n    var propValue = retrieveProp(instance, propName);\n\n    node[nodeValueType] = propValue;\n};\n\nvar renderBind = function renderBind(instance, node, bindType, propName) {\n    //const nodeValueType = getNodeValueType(node);\n    var propValue = retrieveProp(instance, propName);\n\n    console.log(propValue);\n\n    node.setAttribute(bindType, propValue);\n};\n\nvar render = function render() {\n    var _this = this;\n\n    //Bind events\n    crawlNodes(_this.$context, function (node) {\n        eachDirective(node, [{\n            name: \"model\",\n            fn: function fn(directive) {\n                renderModel(_this, node, directive.value);\n            }\n        }, {\n            name: \"bind\",\n            fn: function fn(directive) {\n                renderBind(_this, node, directive.secondary, directive.value);\n            }\n        }]);\n    });\n\n    console.log(\"CALLED $render\");\n};\n\n/**\n * Basic Axon Constructor\n *\n * @constructor\n * @param {String} id To identify the instance\n * @returns {Object} Returns Axon instance\n */\nvar Axon = function Axon(config) {\n    var autoInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    var _this = this;\n\n    _this.$context = _document.querySelector(config.context);\n    _this.$data = config.data;\n    _this.$methods = config.methods;\n\n    if (autoInit) {\n        _this.$render();\n        _this.$init();\n    }\n};\n\n/**\n * Expose Axon methods\n */\nAxon.prototype = {\n    $init: init,\n    $render: render,\n    constructor: Axon\n};\n\nreturn Axon;\n\n}());\n\n//# sourceMappingURL=axon.js.map\n"]}