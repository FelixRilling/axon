{"version":3,"sources":["axon.js"],"names":["Axon","_document","document","TYPE_NAME_UNDEFINED","TYPE_NAME_FUNCTION","LIB_STRING_QUOTES","LIB_DEBOUNCE_TIMEOUT","DOM_ATTR_PREFIX","DOM_ATTR_HIDDEN","crawlNodes","entry","fn","recurseNodes","node","result","childElementCount","childArr","Array","from","children","forEach","childNode","eachDirective","namesList","names","map","item","name","attrArr","attributes","attr","substr","length","splitName","replace","split","nameIndex","indexOf","value","debounce","wait","immediate","timeout","context","this","args","arguments","callNow","later","apply","clearTimeout","setTimeout","_typeof","Symbol","iterator","obj","constructor","prototype","getNodeValueType","textContent","bindEvent","eventType","eventFn","eventArgs","instance","debouncedFn","nodeValueType","eventFnWrapper","event","target","push","addEventListener","retrieveProp","expression","splitExpression","prop","$data","propPath","Error","evaluateExpression","isNaN","Number","includes","retrieveMethod","expressionSplit","methodName","methodArgs","filter","arg","methodFn","$methods","initOn","targetMethod","init","_this","$context","nameSecondary","console","log","renderIf","propValue","Boolean","removeAttribute","setAttribute","renderModel","propName","renderBind","bindType","render","config","querySelector","data","methods","$init","$render"],"mappings":"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","file":"axon.min.js","sourcesContent":["/**\n * Axon v0.11.0\n * Author: Felix Rilling\n * Repository: git+https://github.com/FelixRilling/axonjs.git\n */\n\nvar Axon = (function () {\n'use strict';\n\nvar _document = document;\n\nvar TYPE_NAME_UNDEFINED = \"undefined\";\nvar TYPE_NAME_FUNCTION = \"function\";\nvar LIB_STRING_QUOTES = [\"'\", \"\\\"\", \"`\"];\nvar LIB_DEBOUNCE_TIMEOUT = 32; //event timeout in ms\n\nvar DOM_ATTR_PREFIX = \"x-\";\nvar DOM_ATTR_HIDDEN = \"hidden\";\n\nvar crawlNodes = function crawlNodes(entry, fn) {\n    var recurseNodes = function recurseNodes(node, fn) {\n        var result = fn(node);\n\n        if (result && node.childElementCount) {\n            var childArr = Array.from(node.children);\n\n            childArr.forEach(function (childNode) {\n                result = recurseNodes(childNode, fn);\n            });\n        }\n\n        return result;\n    };\n\n    return recurseNodes(entry, fn);\n};\n\nvar eachDirective = function eachDirective(node, namesList) {\n    var names = namesList.map(function (item) {\n        return item.name;\n    });\n    var attrArr = Array.from(node.attributes);\n    var result = true;\n\n    attrArr.forEach(function (attr) {\n        //If is Axon attribute\n        if (attr.name.substr(0, DOM_ATTR_PREFIX.length) === DOM_ATTR_PREFIX) {\n            var splitName = attr.name.replace(DOM_ATTR_PREFIX, \"\").split(\":\");\n            var nameIndex = names.indexOf(splitName[0]);\n\n            //If name is allowed\n            if (nameIndex !== -1) {\n                result = namesList[nameIndex].fn(splitName[0], splitName[1], attr.value);\n            }\n        }\n    });\n\n    return result;\n};\n\nvar debounce = function debounce(fn, wait, immediate) {\n    var timeout = void 0;\n\n    return function () {\n        var context = this;\n        var args = Array.from(arguments);\n        var callNow = immediate && !timeout;\n        var later = function later() {\n            timeout = null;\n            if (!immediate) {\n                fn.apply(context, args);\n            }\n        };\n\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) {\n            fn.apply(context, args);\n        }\n    };\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar getNodeValueType = function getNodeValueType(node) {\n    if (_typeof(node.value) !== TYPE_NAME_UNDEFINED) {\n        return \"value\";\n    } else if (_typeof(node.textContent) !== TYPE_NAME_UNDEFINED) {\n        return \"textContent\";\n    } else {\n        return \"innerHTML\";\n    }\n};\n\nvar bindEvent = function bindEvent(node, eventType, eventFn, eventArgs, instance) {\n    var debouncedFn = debounce(eventFn, LIB_DEBOUNCE_TIMEOUT);\n    var nodeValueType = getNodeValueType(node);\n\n    var eventFnWrapper = function eventFnWrapper(event) {\n        var target = event.target;\n        var args = Array.from(eventArgs);\n\n        args.push(target[nodeValueType], target, event);\n\n        return debouncedFn.apply(instance, args);\n    };\n\n    return node.addEventListener(eventType, eventFnWrapper, false);\n};\n\nvar retrieveProp = function retrieveProp(instance, expression) {\n    var splitExpression = expression.split(\".\");\n    var prop = instance.$data;\n\n    splitExpression.forEach(function (propPath) {\n        prop = prop[propPath];\n    });\n\n    if ((typeof prop === \"undefined\" ? \"undefined\" : _typeof(prop)) === TYPE_NAME_UNDEFINED) {\n        throw new Error(\"prop '\" + expression + \"' not found\");\n    } else {\n        return prop;\n    }\n};\n\nvar evaluateExpression = function evaluateExpression(instance, expression) {\n    if (!isNaN(Number(expression))) {\n        //expression is a Number\n        return Number(expression);\n    } else if (LIB_STRING_QUOTES.includes(expression.substr(0, 1))) {\n        //expression is a String\n        return expression.substr(1, expression.length - 2);\n    } else if (expression.substr(expression.length - 1) === \")\") {\n        //expression is a Method\n        return retrieveMethod(instance, expression);\n    } else {\n        //expression is a Property\n        return retrieveProp(instance, expression);\n    }\n};\n\nvar retrieveMethod = function retrieveMethod(instance, expression) {\n    var expressionSplit = expression.substr(0, expression.length - 1).split(\"(\");\n    var methodName = expressionSplit[0];\n    var methodArgs = expressionSplit[1].split(\",\").filter(function (item) {\n        return item !== \"\";\n    }).map(function (arg) {\n        return evaluateExpression(instance, arg);\n    });\n    var methodFn = instance.$methods[methodName];\n\n    if ((typeof methodFn === \"undefined\" ? \"undefined\" : _typeof(methodFn)) !== TYPE_NAME_FUNCTION) {\n        throw new Error(\"method '\" + methodName + \"' not found\");\n    } else {\n        return {\n            fn: methodFn,\n            args: methodArgs\n        };\n    }\n};\n\nvar initOn = function initOn(instance, node, eventType, methodName) {\n    var targetMethod = retrieveMethod(instance, methodName);\n\n    bindEvent(node, eventType, targetMethod.fn, targetMethod.args, instance);\n\n    return true;\n};\n\nvar init = function init() {\n    var _this = this;\n\n    //Bind events\n    crawlNodes(_this.$context, function (node) {\n        return eachDirective(node, [{\n            name: \"on\",\n            fn: function fn(name, nameSecondary, value) {\n                return initOn(_this, node, nameSecondary, value);\n            }\n        }]);\n    });\n\n    console.log(\"CALLED $init\");\n};\n\nvar renderIf = function renderIf(instance, node, expression) {\n    var propValue = evaluateExpression(instance, expression);\n    var result = Boolean(propValue);\n\n    if (result) {\n        node.removeAttribute(DOM_ATTR_HIDDEN);\n    } else {\n        node.setAttribute(DOM_ATTR_HIDDEN, DOM_ATTR_HIDDEN);\n    }\n\n    return result;\n};\n\nvar renderModel = function renderModel(instance, node, propName) {\n    var nodeValueType = getNodeValueType(node);\n    var propValue = evaluateExpression(instance, propName);\n\n    node[nodeValueType] = propValue;\n\n    return true;\n};\n\nvar renderBind = function renderBind(instance, node, bindType, expression) {\n    var propValue = evaluateExpression(instance, expression);\n\n    node.setAttribute(bindType, propValue);\n\n    return true;\n};\n\nvar render = function render() {\n    var _this = this;\n\n    //Render DOM\n    crawlNodes(_this.$context, function (node) {\n        return eachDirective(node, [{\n            name: \"ignore\",\n            fn: function fn() {\n                return false;\n            }\n        }, {\n            name: \"if\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderIf(_this, node, value);\n            }\n        }, {\n            name: \"model\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderModel(_this, node, value);\n            }\n        }, {\n            name: \"bind\",\n            fn: function fn(name, nameSecondary, value) {\n                return renderBind(_this, node, nameSecondary, value);\n            }\n        }]);\n    });\n\n    console.log(\"CALLED $render\");\n};\n\n/**\n * Basic Axon Constructor\n *\n * @constructor\n * @param {String} id To identify the instance\n * @returns {Object} Returns Axon instance\n */\nvar Axon = function Axon(config) {\n    var _this = this;\n\n    _this.$context = _document.querySelector(config.context);\n    _this.$data = config.data;\n    _this.$methods = config.methods;\n\n    _this.$init();\n    _this.$render();\n};\n\n/**\n * Expose Axon methods\n */\nAxon.prototype = {\n    $init: init,\n    $render: render,\n    constructor: Axon\n};\n\nreturn Axon;\n\n}());\n\n//# sourceMappingURL=axon.js.map\n"]}